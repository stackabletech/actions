---
name: Build Product Image
description: This action builds a product Docker image with a specific version
inputs:
  product-name:
    description: The name of the product to build via bake (directory name)
    required: true
  product-version:
    description: The version of the product to build via bake
    required: true
  image-tools-version:
    description: The Stackable image-tools version
    default: 0.0.13
  build-cache-username:
    description: Build cache username
    default: github
  build-cache-password:
    description: Build cache password
    required: true
  bake-config-file:
    description: Path to the bake config file, defaults to `./conf.py`
    default: ./conf.py
  sdp-version:
    description: |
      Stackable Data Platform version (eg: `24.7.0`)
    default: 0.0.0-dev
outputs:
  image-manifest-tag:
    description: |
      Human-readable tag (usually the version) with architecture information,
      for example: `3.4.1-stackable0.0.0-dev-amd64`
    value: ${{ steps.image_info.outputs.IMAGE_MANIFEST_TAG }}
runs:
  using: composite
  steps:
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1

      # NOTE (@Techassi): Why do we install python via apt and not the setup-python action?
    - name: Setup Python
      shell: bash
      run: |
        set -euo pipefail
        sudo apt update
        sudo apt install -y python3

    - name: Install image-tools-stackabletech
      shell: bash
      run: pip install image-tools-stackabletech==${{ inputs.image-tools-version }}

      # Needed if you pass the --cache argument to the bake command below
    - name: Login to the docker build cache registry
      uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
      with:
        registry: build-repo.stackable.tech:8083
        username: ${{ inputs.build-cache-username }}
        password: ${{ inputs.build-cache-password }}

    - name: Building ${{ inputs.product-name }} Container Image using bake
      env:
        BAKE_PRODUCT_VERSION: ${{ inputs.product-version }}
        BAKE_CONFIG_FILE: ${{ inputs.bake-config-file }}
        IMAGE_REPOSITORY: ${{ inputs.product-name }}
        SDP_VERSION: ${{ inputs.sdp-version }}
      shell: bash
      run: |
        set -euo pipefail
        IMAGE_ARCH="$(uname -m | sed -e 's#x86_64#amd64#' | sed -e 's#aarch64#arm64#')"

        echo "::group::bake"
        bake \
          --product "$IMAGE_REPOSITORY=$BAKE_PRODUCT_VERSION" \
          --image-version "${SDP_VERSION}-${IMAGE_ARCH}" \
          --architecture "linux/${IMAGE_ARCH}" \
          --export-tags-file bake-target-tags \
          --configuration "$BAKE_CONFIG_FILE" \
          --cache
        echo "::endgroup::"

    - name: Re-tag Image (Temporary)
      shell: bash
      run: |
        set -euo pipefail

        # Extract the image uri and replace 'docker.stackable.tech/stackable'
        # with 'localhost' until bake does the right thing
        OLD_IMAGE_URI="$(< bake-target-tags)"

        # Replace the image uri in the bake file
        sed -i -e 's/docker\.stackable\.tech\/stackable/localhost/' bake-target-tags

        # Finally, re-tag image
        docker tag "$OLD_IMAGE_URI" "$(< bake-target-tags)"

    - name: Extract Environment Variables
      id: image_info
      shell: bash
      run: |
        set -euo pipefail
        echo "bake-target-tags: "$(< bake-target-tags)

        # Extract the image manifest tag from the bake-target-tags file
        IMAGE_MANIFEST_TAG=$(cut -d : -f 2 < bake-target-tags)
        [[ -n "$IMAGE_MANIFEST_TAG" ]]

        # Add the contents of the env variables to the GitHub output, so that it
        # can be used as action outputs
        echo "IMAGE_MANIFEST_TAG=$IMAGE_MANIFEST_TAG" | tee -a "$GITHUB_OUTPUT"
