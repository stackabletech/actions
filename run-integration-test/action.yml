---
name: Run Integration Test
description: |
  This action runs Stackable Operator integration tests on various platforms and
  Kubernetes distributions.
inputs:
  test-platform:
    description: |
      The platform/distribution to run on (eg: `okd-4.15-amd64`)
    required: true
  test-run:
    description: Type of test run
    required: true
  test-parameter:
    description: Parameter to `--test-suite` or `--test` (ignored for `all`)
    default: ""
  replicated-api-token:
    description: Replicated API token (only needed if running on replicated)
    default: ""
runs:
  using: composite
  steps:
    - name: Slice it up
      env:
        TEST_PLATFORM: ${{ inputs.test-platform }}
      shell: bash
      run: |
        set -euo pipefail

        KUBERNETES_DISTRIBUTION=$(echo "$TEST_PLATFORM" | cut -d - -f 1)
        KUBERNETES_VERSION=$(echo "$TEST_PLATFORM" | cut -d - -f 2)
        KUBERNETES_ARCHITECTURE=$(echo "$TEST_PLATFORM" | cut -d - -f 3)

        echo "KUBERNETES_DISTRIBUTION=$KUBERNETES_DISTRIBUTION" | tee -a "$GITHUB_ENV"
        echo "KUBERNETES_VERSION=$KUBERNETES_VERSION" | tee -a "$GITHUB_ENV"
        echo "KUBERNETES_ARCHITECTURE=$KUBERNETES_ARCHITECTURE" | tee -a "$GITHUB_ENV"

    # Todo: Map arch to whatever applicable settings (eg: replicated:kind only supports x86, azure can support ARM, and you need to map the types)

    - name: Prepare Replicated Cluster
      if: env.KUBERNETES_DISTRIBUTION != 'ionos'
      id: prepare-replicated-cluster
      uses: replicatedhq/replicated-actions/create-cluster@v1 # todo, hash
      with:
        # See: https://github.com/replicatedhq/replicated-actions/tree/main/create-cluster#inputs
        api-token: ${{ inputs.replicated-api-token }}
        cluster-name: ${{ github.repository }}-${{ github.run_id }}
        instance-type: r1.medium # todo, source this from _somewhere_
        kubernetes-distribution: ${{ env.KUBERNETES_DISTRIBUTION }}
        kubernetes-version: ${{ env.KUBERNETES_VERSION }}
        ttl: 4h # todo: allow this to be configurable
        disk: 50 # todo: allow this to be configurable
        nodes: 1 # todo: allow this to be configurable
    - name: Set Replicated kubeconfig
      if: env.KUBERNETES_DISTRIBUTION != 'ionos'
      env:
        KUBECONFIG: ${{ steps.prepare-replicated-cluster.outputs.cluster-kubeconfig }}
      shell: bash
      run: |
        set -euo pipefail
        mkdir ~/.kube
        echo "$KUBECONFIG" > ~/.kube/config

    - name: Extract Operator Name
      env:
        REPOSITORY: ${{ github.repository }}
      shell: bash
      run: |
        set -euo pipefail

        OPERATOR_NAME=$(echo "$REPOSITORY" | cut -d / -f 2 | sed 's/-operator//g')
        echo "OPERATOR_NAME=$OPERATOR_NAME" | tee -a "$GITHUB_ENV"

    - name: Setup Tool Directory
      shell: bash
      run: |
        set -euo pipefail

        TOOL_DIRECTORY="$HOME/.local/bin"
        mkdir -p "$TOOL_DIRECTORY"

        echo "$TOOL_DIRECTORY" | tee -a "$GITHUB_PATH"
        echo "TOOL_DIRECTORY=$TOOL_DIRECTORY" | tee -a "$GITHUB_ENV"

    # We don't need to install kubectl, kind or helm because it is already part of the installed
    # tools of the runner image.
    # See https://github.com/actions/runner-images/blob/main/images/ubuntu/scripts/build/install-kubernetes-tools.sh
    - name: Install kubectl-kuttl
      shell: bash
      run: |
        set -euo pipefail

        curl -L -o "$TOOL_DIRECTORY/kubectl-kuttl" https://github.com/kudobuilder/kuttl/releases/download/v0.19.0/kubectl-kuttl_0.19.0_linux_x86_64
        chmod +x "$TOOL_DIRECTORY/kubectl-kuttl"

    # Python3 is already installed, if we ever need to specify the version, we can use the
    # setup-python action.
    # See https://github.com/actions/runner-images/blob/main/images/ubuntu/scripts/build/install-python.sh
    - name: Install beku
      shell: bash
      run: |
        set -euo pipefail
        pip install beku-stackabletech

    # mikefarah/yq is already installed on the runner
    # See https://github.com/actions/runner-images/blob/main/images/ubuntu/scripts/build/install-yq.sh

    - name: Install stackablectl
      shell: bash
      run: |
        set -euo pipefail

        curl -L -o "$TOOL_DIRECTORY/stackablectl" https://github.com/stackabletech/stackable-cockpit/releases/latest/download/stackablectl-x86_64-unknown-linux-gnu
        chmod +x "$TOOL_DIRECTORY/stackablectl"

    - name: Install apt packages
      shell: bash
      run: |
        set -euo pipefail

        sudo apt update
        sudo apt install -y \
          gettext-base

    - name: Run Integration Test (${{ inputs.test-run }}=${{ inputs.test-parameter }})
      shell: bash
      run: |
        set -euo pipefail

        # TODO (@Techassi): Use the correct version here, for now use 0.0.0-dev
        # TODO (@Techassi): There are retries in the current Jenkins test, so we should also add it
        # here.
        python ./scripts/run-tests --skip-tests --operator "$OPERATOR_NAME=0.0.0-dev"

        python ./scripts/run-tests --skip-release --log-level debug "--${{ inputs.test-run }}" "${{ inputs.test-parameter }}"

    - name: Destroy Replicated Cluster
      if: env.KUBERNETES_DISTRIBUTION != 'ionos' && always()
      uses: replicatedhq/replicated-actions/remove-cluster@v1 # todo, hash
      with:
        # See: https://github.com/replicatedhq/replicated-actions/tree/main/remove-cluster#inputs
        api-token: ${{ inputs.replicated-api-token }}
        cluster-id: ${{ steps.prepare-replicated-cluster.outputs.cluster-id }}
