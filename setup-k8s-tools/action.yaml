---
name: Setup Kubernetes Tools
description: This action sets up Kubernetes tools
inputs:
  kubectl-version:
    description: The version of kubectl
  kuttl-version:
    description: The version of kubectl-kuttl
  helm-version:
    description: The version of helm
runs:
  using: composite
  steps:
    # We technically don't need to install kubectl, kind or helm because it is already part of the installed
    # tools of the runner image, but we at least install kubectl and helm explicitly, to be able to pin the versions.
    # See https://github.com/actions/runner-images/blob/main/images/ubuntu/scripts/build/install-kubernetes-tools.sh
    - name: Install kubectl
      if: inputs.kubectl-version
      env:
        KUBECTL_VERSION: ${{ inputs.kubectl-version }}
        GITHUB_DEBUG: ${{ runner.debug }}
      shell: bash
      run: |
        set -euo pipefail
        [ -n "$GITHUB_DEBUG" ] && set -x

        ARCH=$("$GITHUB_ACTION_PATH/../.scripts/actions/get_architecture.sh")

        echo "::group::Install kubectl"
        curl -fsSL -o /tmp/kubectl "https://dl.k8s.io/release/${KUBECTL_VERSION}/bin/linux/${ARCH}/kubectl"
        # Overwrite the existing binary
        sudo install -m 755 -t /usr/local/bin /tmp/kubectl

        kubectl version --client
        echo "::endgroup::"

    - name: Install kubectl-kuttl
      if: inputs.kuttl-version
      env:
        KUTTL_VERSION: ${{ inputs.kuttl-version }}
        GITHUB_DEBUG: ${{ runner.debug }}
      shell: bash
      run: |
        set -euo pipefail
        [ -n "$GITHUB_DEBUG" ] && set -x

        echo "::group::Install kubectl-kuttl"
        curl -fsSL -o /tmp/kubectl-kuttl "https://github.com/kudobuilder/kuttl/releases/download/v$KUTTL_VERSION/kubectl-kuttl_${KUTTL_VERSION}_linux_x86_64"
        sudo install -m 755 -t /usr/local/bin /tmp/kubectl-kuttl
        echo "::endgroup::"

    - name: Install Helm
      if: inputs.helm-version
      env:
        HELM_VERSION: ${{ inputs.helm-version }}
        GITHUB_DEBUG: ${{ runner.debug }}
      shell: bash
      run: |
        set -euo pipefail
        [ -n "$GITHUB_DEBUG" ] && set -x

        PLATFORM=$("$GITHUB_ACTION_PATH/../.scripts/actions/get_platform.sh")
        ARCH=$("$GITHUB_ACTION_PATH/../.scripts/actions/get_architecture.sh")

        FILENAME="helm-${HELM_VERSION}-${PLATFORM}-${ARCH}.tar.gz"

        echo "::group::Install helm"
        mkdir /tmp/helm
        curl -fsSL -o /tmp/helm/helm.tar.gz "https://get.helm.sh/${FILENAME}"
        curl -fsSL -o /tmp/helm/helm.tar.gz.asc "https://github.com/helm/helm/releases/download/${HELM_VERSION}/${FILENAME}.asc"

        curl https://keybase.io/mattfarina/pgp_keys.asc | gpg --import
        gpg --verify /tmp/helm/helm.tar.gz.asc /tmp/helm/helm.tar.gz

        tar --directory="/tmp/helm" --strip-components=1 -zxvf /tmp/helm/helm.tar.gz "${PLATFORM}-${ARCH}"
        # Overwrite the existing binary
        sudo install -m 755 -t /usr/local/bin /tmp/helm/helm

        helm version --short
        echo "::endgroup::"
