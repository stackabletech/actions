---
name: Build Product Image
description: This action builds a product Docker image with a specific version
inputs:
  image-name:
    description: |
      The local name of the built image, for example: `kafka` or
      `csi-provisioner`
    required: true
  image-index-manifest-tag:
    description: |
      Human-readable tag (usually the version) without architecture information,
      for example: `3.4.1-stackable0.0.0-dev`
  container-file:
    description: Path to Containerfile (or Dockefile)
    default: Dockerfile
  build-context:
    description: Path to the build-context
    default: .
outputs:
  image-repository-uri:
    description: |
      The locally tagged name of the image, for example: `localhost/kafka`
    value: ${{ steps.build-image.outputs.IMAGE_REPOSITORY_URI }}
  image-manifest-tag:
    description: |
      Human-readable tag (usually the version) with architecture information,
      for example: `3.4.1-stackable0.0.0-dev-amd64`
    value: ${{ steps.build-image.outputs.IMAGE_MANIFEST_TAG }}
  image-manifest-uri:
    description: |
      The full image manifest uri, for example:
      localhost/kafka:3.4.1-stackable0.0.0-dev-amd64
    value: ${{ steps.build-image.outputs.IMAGE_MANIFEST_URI }}
runs:
  using: composite
  steps:
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

    - name: Build ${{ inputs.image-name }}:${{ inputs.image-index-manifest-tag }}
      id: build-image
      env:
        IMAGE_NAME: ${{ inputs.image-name }}
        IMAGE_INDEX_MANIFEST_TAG: ${{ inputs.image-index-manifest-tag }}
        CONTAINER_FILE: ${{ inputs.container-file }}
        BUILD_CONTEXT: ${{ inputs.build-context }}
      shell: bash
      run: |
        set -euo pipefail

        IMAGE_ARCH=$("$GITHUB_ACTION_PATH/../.scripts/actions/get_architecture.sh")
        echo "IMAGE_ARCH=${IMAGE_ARCH}" | tee -a "$GITHUB_ENV"

        IMAGE_MANIFEST_TAG="${IMAGE_INDEX_MANIFEST_TAG}-${IMAGE_ARCH}"
        echo "IMAGE_MANIFEST_TAG=${IMAGE_MANIFEST_TAG}" | tee -a "$GITHUB_OUTPUT"

        IMAGE_REPOSITORY_URI="localhost/${IMAGE_NAME}"
        echo "IMAGE_REPOSITORY_URI=${IMAGE_REPOSITORY_URI}" | tee -a "$GITHUB_OUTPUT"

        IMAGE_MANIFEST_URI="${IMAGE_REPOSITORY_URI}:${IMAGE_MANIFEST_TAG}"
        echo "IMAGE_MANIFEST_URI=${IMAGE_MANIFEST_URI}" | tee -a "$GITHUB_OUTPUT"

        echo "::group::docker buildx build"
        # TODO (@NickLarsenNZ): Allow optional buildx cache
        docker buildx build \
        --file "${CONTAINER_FILE}" \
        --platform "linux/${IMAGE_ARCH}" \
        --tag "${IMAGE_MANIFEST_URI}" \
        --load \
        "${BUILD_CONTEXT}"
        echo "::endgroup::"

        echo "::group::docker images"
        docker images
        echo "::endgroup::"
